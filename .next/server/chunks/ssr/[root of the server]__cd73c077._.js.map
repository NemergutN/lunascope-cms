{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikolasnemergut/Desktop/Websites/lunascope-cms/src/prismicio.ts"],"sourcesContent":["import {\n  createClient as baseCreateClient,\n  ClientConfig,\n  Route,\n} from \"@prismicio/client\";\nimport { enableAutoPreviews } from \"@prismicio/next\";\nimport sm from \"../slicemachine.config.json\";\n\n/**\n * The project's Prismic repository name.\n */\nexport const repositoryName =\n  process.env.NEXT_PUBLIC_PRISMIC_ENVIRONMENT || sm.repositoryName;\n\n/**\n * The project's Prismic route resolvers. This list determines a Prismic document's URL.\n */\nconst routes: Route[] = [\n  { type: \"page\", uid: \"home\", path: \"/\" },\n  { type: \"page\", path: \"/:uid\" },\n];\n\n/**\n * Creates a Prismic client for the project's repository. The client is used to\n * query content from the Prismic API.\n *\n * @param config - Configuration for the Prismic client.\n */\nexport function createClient(config: ClientConfig = {}) {\n  const client = baseCreateClient(sm.apiEndpoint || repositoryName, {\n    routes,\n    fetchOptions:\n      process.env.NODE_ENV === \"production\"\n        ? { next: { tags: [\"prismic\"] }, cache: \"force-cache\" }\n        : { next: { revalidate: 5 } },\n    ...config,\n  });\n\n  enableAutoPreviews({ client });\n\n  return client;\n}\n"],"names":[],"mappings":";;;;AAAA;AAKA;AACA;;;;AAKO,MAAM,iBACX,QAAQ,GAAG,CAAC,+BAA+B,IAAI,8FAAA,CAAA,UAAE,CAAC,cAAc;AAElE;;CAEC,GACD,MAAM,SAAkB;IACtB;QAAE,MAAM;QAAQ,KAAK;QAAQ,MAAM;IAAI;IACvC;QAAE,MAAM;QAAQ,MAAM;IAAQ;CAC/B;AAQM,SAAS,aAAa,SAAuB,CAAC,CAAC;IACpD,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,eAAgB,AAAD,EAAE,8FAAA,CAAA,UAAE,CAAC,WAAW,IAAI,gBAAgB;QAChE;QACA,cACE,6EAEI;YAAE,MAAM;gBAAE,YAAY;YAAE;QAAE;QAChC,GAAG,MAAM;IACX;IAEA,CAAA,GAAA,iKAAA,CAAA,qBAAkB,AAAD,EAAE;QAAE;IAAO;IAE5B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/dm_sans_61d76c23.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"dm_sans_61d76c23-module__xuJvpG__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/dm_sans_61d76c23.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22DM_Sans%22,%22arguments%22:[{%22weight%22:%22400%22,%22subsets%22:[%22latin%22],%22display%22:%22swap%22}],%22variableName%22:%22dm_sans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'DM Sans', 'DM Sans Fallback'\",\n        fontWeight: 400,\nfontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,uJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,YAAY;QACpB,WAAW;IAEP;AACJ;AAEA,IAAI,uJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,uJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikolasnemergut/Desktop/Websites/lunascope-cms/src/app/layout.tsx"],"sourcesContent":["import \"./globals.css\"\nimport { PrismicPreview } from \"@prismicio/next\";\nimport { repositoryName } from \"@/prismicio\";\nimport { DM_Sans } from 'next/font/google'\n \nconst dm_sans = DM_Sans({\n  weight: '400',\n  subsets: ['latin'],\n  display: 'swap',\n})\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" className={dm_sans.className}>\n      <body>\n        {children}\n        <h1 className=\"text-3xl font-bold underline\">\n          hello lunascope!\n          </h1>\n      </body>\n      <PrismicPreview repositoryName={repositoryName} />\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;;;;;AASe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;QAAK,WAAW,2IAAA,CAAA,UAAO,CAAC,SAAS;;0BAC1C,8OAAC;;oBACE;kCACD,8OAAC;wBAAG,WAAU;kCAA+B;;;;;;;;;;;;0BAI/C,8OAAC,6JAAA,CAAA,iBAAc;gBAAC,gBAAgB,gHAAA,CAAA,iBAAc;;;;;;;;;;;;AAGpD","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}