{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikolasnemergut/Desktop/Websites/lunascope-cms/src/slices/index.ts"],"sourcesContent":["// Code generated by Slice Machine. DO NOT EDIT.\n\nimport dynamic from \"next/dynamic\";\n\nexport const components = {\n  rich_text: dynamic(() => import(\"./RichText\")),\n};\n"],"names":[],"mappings":"AAAA,gDAAgD;;;;AAEhD;;;AAEO,MAAM,aAAa;IACxB,WAAW,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAAE;;;;;;;AACrB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikolasnemergut/Desktop/Websites/lunascope-cms/src/app/%5Buid%5D/page.tsx"],"sourcesContent":["import { Metadata } from \"next\";\nimport { notFound } from \"next/navigation\";\n\nimport { asText, filter } from \"@prismicio/client\";\nimport { SliceZone } from \"@prismicio/react\";\n\nimport { createClient } from \"@/prismicio\";\nimport { components } from \"@/slices\";\n\ntype Params = { uid: string };\n\nexport default async function Page({ params }: { params: Promise<Params> }) {\n  const { uid } = await params;\n  const client = createClient();\n  const page = await client.getByUID(\"page\", uid).catch(() => notFound());\n\n  // <SliceZone> renders the page's slices.\n  return <SliceZone slices={page.data.slices} components={components} />;\n}\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<Params>;\n}): Promise<Metadata> {\n  const { uid } = await params;\n  const client = createClient();\n  const page = await client.getByUID(\"page\", uid).catch(() => notFound());\n\n  return {\n    title: asText(page.data.title),\n    description: page.data.meta_description,\n    openGraph: {\n      title: page.data.meta_title ?? undefined,\n      images: [{ url: page.data.meta_image.url ?? \"\" }],\n    },\n  };\n}\n\nexport async function generateStaticParams() {\n  const client = createClient();\n\n  // Get all pages from Prismic, except the homepage.\n  const pages = await client.getAllByType(\"page\", {\n    filters: [filter.not(\"my.page.uid\", \"home\")],\n  });\n\n  return pages.map((page) => ({ uid: page.uid }));\n}\n"],"names":[],"mappings":";;;;;;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;;;;;;;AAIe,eAAe,KAAK,EAAE,MAAM,EAA+B;IACxE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM;IACtB,MAAM,SAAS,CAAA,GAAA,gHAAA,CAAA,eAAY,AAAD;IAC1B,MAAM,OAAO,MAAM,OAAO,QAAQ,CAAC,QAAQ,KAAK,KAAK,CAAC,IAAM,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAEnE,yCAAyC;IACzC,qBAAO,8OAAC,yJAAA,CAAA,YAAS;QAAC,QAAQ,KAAK,IAAI,CAAC,MAAM;QAAE,YAAY,sHAAA,CAAA,aAAU;;;;;;AACpE;AAEO,eAAe,iBAAiB,EACrC,MAAM,EAGP;IACC,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM;IACtB,MAAM,SAAS,CAAA,GAAA,gHAAA,CAAA,eAAY,AAAD;IAC1B,MAAM,OAAO,MAAM,OAAO,QAAQ,CAAC,QAAQ,KAAK,KAAK,CAAC,IAAM,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAEnE,OAAO;QACL,OAAO,CAAA,GAAA,kKAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,CAAC,KAAK;QAC7B,aAAa,KAAK,IAAI,CAAC,gBAAgB;QACvC,WAAW;YACT,OAAO,KAAK,IAAI,CAAC,UAAU,IAAI;YAC/B,QAAQ;gBAAC;oBAAE,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI;gBAAG;aAAE;QACnD;IACF;AACF;AAEO,eAAe;IACpB,MAAM,SAAS,CAAA,GAAA,gHAAA,CAAA,eAAY,AAAD;IAE1B,mDAAmD;IACnD,MAAM,QAAQ,MAAM,OAAO,YAAY,CAAC,QAAQ;QAC9C,SAAS;YAAC,uJAAA,CAAA,SAAM,CAAC,GAAG,CAAC,eAAe;SAAQ;IAC9C;IAEA,OAAO,MAAM,GAAG,CAAC,CAAC,OAAS,CAAC;YAAE,KAAK,KAAK,GAAG;QAAC,CAAC;AAC/C","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}